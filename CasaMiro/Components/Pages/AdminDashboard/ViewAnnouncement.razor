@page "/view-announcement"
@using CasaMiro.Models
@inject NavigationManager Navigation
@inject IDbContextFactory<CasaMiro.Data.ApplicationDbContext> DbFactory
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using CasaMiro.Components.Layout
@layout AdminLayout

<div class="container-fluid">
    <div class="row">
        <!-- Main content -->
        <div class="col-12">
            <div class="card mt-3">
                <div class="card-header">
                    <h4 class="card-title">All Announcements</h4>
                </div>
                <div class="card-body">
                    <!-- Dynamic Announcement Cards -->
                    <div class="row">
                        @if (announcements.Any())
                        {
                            @foreach (var announcement in announcements)
                            {
                                <div class="col-12 col-md-4 mb-3">
                                    <div class="card shadow-sm">
                                        <div class="card-header">
                                            <h5 class="card-title">@announcement.Title</h5>
                                        </div>
                                        <div class="card-body">
                                            <p class="card-text">@announcement.Description</p>
                                            <p class="card-text">
                                                <small class="text-muted">Posted: @announcement.Date.ToString("MM/dd/yyyy")</small>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center">
                                <p>No announcements available at this time.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Announcement> announcements = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadAnnouncements();
    }

    private async Task LoadAnnouncements()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        announcements = await context.Announcements.ToListAsync();
    }
}
