@page "/user-announcements"
@using CasaMiro.Models
@inject NavigationManager Navigation

@using CasaMiro.Components.Layout
@layout UserDashboardLayout

<div class="container-fluid">
    <div class="row">
        <!-- Announcements List Section -->
        <div class="col-lg-8 mx-auto">
            <!-- Announcements Header -->
            <div class="announcements-header card shadow-sm mb-4">
                <div class="card-body text-center">
                    <h3 class="card-title">Latest Announcements</h3>
                    <p class="text-muted">Stay updated with the latest news and updates from the system.</p>
                </div>
            </div>

            <!-- Announcement Card Section -->
            @foreach (var announcement in announcements)
            {
                <div class="announcement-card card shadow-sm mb-3">
                    <div class="card-body">
                        <h5 class="card-title">@announcement.Title</h5>
                        <p class="card-text">@announcement.Description</p>
                        <p class="card-footer text-muted">Posted on @announcement.Date.ToString("MM/dd/yyyy")</p>

                        <div class="d-flex justify-content-between">
                            <button class="btn btn-outline-info btn-sm" @onclick="() => ReadMore(announcement.Id)">
                                <i class="fa-solid fa-eye"></i> Read More
                            </button>
                            <button class="btn btn-outline-danger btn-sm" @onclick="() => DeleteAnnouncement(announcement.Id)">
                                <i class="fa-solid fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal for Viewing Announcement Details (Static Placeholder) -->
<div class="modal fade" id="viewAnnouncementModal" tabindex="-1" role="dialog" aria-labelledby="viewAnnouncementModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewAnnouncementModalLabel">Announcement Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>This is a detailed view of the announcement. Here, users can see more in-depth information about the announcement.</p>
            </div>
        </div>
    </div>
</div>

@code {
    // Sample data for announcements
    private List<Announcement> announcements = new List<Announcement>
    {
        new Announcement { Id = 1, Title = "System Update", Description = "We will be performing scheduled maintenance on our servers from 12:00 AM to 4:00 AM.", Date = DateTime.Now.AddDays(-1) },
        new Announcement { Id = 2, Title = "New Feature Launch", Description = "We are excited to announce the launch of our new feature: Dark Mode! Enjoy a more comfortable viewing experience.", Date = DateTime.Now.AddDays(-5) },
        new Announcement { Id = 3, Title = "Upcoming Event", Description = "Join us for our upcoming webinar on 'Best Practices in Web Development.' RSVP now!", Date = DateTime.Now.AddDays(-7) }
    };

    private void ReadMore(int id)
    {
        // Logic for reading more about the announcement, e.g., show modal or navigate to detailed page
        var announcement = announcements.FirstOrDefault(a => a.Id == id);
        if (announcement != null)
        {
            // Trigger modal or navigate to detailed view (this is just a placeholder)
            Console.WriteLine($"Reading more about: {announcement.Title}");
        }
    }

    private void DeleteAnnouncement(int id)
    {
        // Logic to delete an announcement from the list (this is just a placeholder for static content)
        var announcementToDelete = announcements.FirstOrDefault(a => a.Id == id);
        if (announcementToDelete != null)
        {
            announcements.Remove(announcementToDelete);
        }
    }
}

